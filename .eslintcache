[{"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\reportWebVitals.ts":"1","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Components\\QuestionCard\\questionCard.tsx":"2","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\utils.ts":"3","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Components\\InputCard\\inputCard.tsx":"4","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\App.tsx":"5","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Services\\quizServices.ts":"6"},{"size":425,"mtime":1610942124000,"results":"7","hashOfConfig":"8"},{"size":1814,"mtime":1610942124000,"results":"9","hashOfConfig":"8"},{"size":115,"mtime":1610942124000,"results":"10","hashOfConfig":"8"},{"size":5327,"mtime":1619610394149,"results":"11","hashOfConfig":"8"},{"size":3525,"mtime":1619613224113,"results":"12","hashOfConfig":"8"},{"size":1229,"mtime":1619608374083,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19yopve",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\reportWebVitals.ts",[],"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Components\\QuestionCard\\questionCard.tsx",[],"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\utils.ts",[],"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Components\\InputCard\\inputCard.tsx",[],"C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\App.tsx",["27"],"import React, { useEffect, useState } from 'react';\nimport InputCard from './Components/InputCard/inputCard';\nimport QuestionCard from './Components/QuestionCard/questionCard';\nimport { QuizDetails } from './Services/quizServices';\nimport { DIFFICULTY, Question } from './Type/types';\nimport styles from './App.module.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction App() {\n\n  let [quiz, setQuiz] = useState<Question[]>([]);\n  let [totalQuestion, setTotalQuestion] = useState<number>(5);\n  let [category, setCategory] = useState<any>(9);\n  let [difficulty, setDifficulty] = useState<DIFFICULTY>(DIFFICULTY.EASY);\n  let [submited, setSubmited] = useState<boolean>(false);\n  let [per, setPer] = useState<string>('');\n  let [loading, setloading] = useState<boolean>(false);\n  let [score, setScore] = useState(0);\n  let [step, setStep] = useState(0);\n  let [showResult, setShowResult] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  async function fetchData() {\n    setloading(true)\n    const data: Question[] = await QuizDetails(totalQuestion, category, difficulty);\n    console.log({data})\n    if(data !== []){\n      setQuiz(data)\n    }\n    setloading(false)\n\n  }\n  const handelSubmit = (e: React.FormEvent<EventTarget>, userAns: string) => {\n    e.preventDefault();\n    const currentQuestion: Question = quiz[step];\n    if (userAns === currentQuestion.answer) {\n      setScore(++score);\n    }\n    if (step !== quiz.length - 1) {\n      setStep(++step);\n    }\n    else {\n      setShowResult(true);\n      let num= (score / quiz.length) * 100\n      let nom:string = num.toFixed(2);\n      setPer(nom)\n    }\n  };\n\n  const handleInputSubmit =async (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n   await  fetchData()\n    setSubmited(true);\n  }\n\n  const startAgain =  () => {\n    console.log(submited,showResult)\n    setShowResult(false)\n    setSubmited(false);\n    setScore(0)\n    setStep(0)\n\n    // window.location.reload();\n  }\nconsole.log(quiz,'aap ts')\n\n  if (loading) {\n    return (\n      <div className={styles.loader}><CircularProgress color=\"inherit\" size={200} /></div>\n    )\n  }\n\n  if (showResult) {\n    return (\n      <div className={styles.container} >\n        <h1 className={styles.heading}>Quiz App</h1>\n        <div className={styles.card}>\n          <h1 className={styles.result}>Result</h1> \n          <div className={styles.score}>\n            <h2>Total :</h2>\n            <h2>{quiz.length}</h2>\n          </div>\n          <div className={styles.score}>\n            <h2>Your Score :</h2>\n            <h2>{score}</h2>\n          </div>\n          <div className={styles.score}>\n            <h2>Percentage :</h2>\n            <h2>{per}%</h2>\n          </div>\n          <button className={styles.btn} type='submit' onClick={startAgain}>Start Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {submited && quiz.length  ?\n        <QuestionCard\n          question={quiz[step].question}\n          answer={quiz[step].answer}\n          option={quiz[step].option}\n          totalQuestion={quiz.length}\n          currentQuestion={step}\n          callback={handelSubmit}\n        />\n        :\n        <InputCard\n          category={category}\n          setCategory={setCategory}\n          totalQuestion={totalQuestion}\n          setTotalQuestion={setTotalQuestion}\n          difficulty={difficulty}\n          setDifficulty={setDifficulty}\n          callback={handleInputSubmit}\n        />}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ali Haider\\Desktop\\test\\a-quiz-app-master\\src\\Services\\quizServices.ts",[],{"ruleId":"28","severity":1,"message":"29","line":23,"column":6,"nodeType":"30","endLine":23,"endColumn":8,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [fetchData]",{"range":"35","text":"36"},[977,979],"[fetchData]"]